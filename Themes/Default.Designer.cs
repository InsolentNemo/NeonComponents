//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InsolentNemo.NeonComponents.Themes {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Default {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Default() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("InsolentNemo.NeonComponents.Themes.Default", typeof(Default).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 255,255,255,255 ähnelt.
        /// </summary>
        internal static string NeonBoxPanel_BackColor {
            get {
                return ResourceManager.GetString("NeonBoxPanel.BackColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Transparent ähnelt.
        /// </summary>
        internal static string NeonBoxPanel_CloseButton_BackColor {
            get {
                return ResourceManager.GetString("NeonBoxPanel.CloseButton.BackColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 255,0,0,0 ähnelt.
        /// </summary>
        internal static string NeonBoxPanel_CloseButton_ForeColor {
            get {
                return ResourceManager.GetString("NeonBoxPanel.CloseButton.ForeColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 255,0,0,0 ähnelt.
        /// </summary>
        internal static string NeonBoxPanel_TitleLabel_ForeColor {
            get {
                return ResourceManager.GetString("NeonBoxPanel.TitleLabel.ForeColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Transparent ähnelt.
        /// </summary>
        internal static string NeonButton_BackColor {
            get {
                return ResourceManager.GetString("NeonButton.BackColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 255,0,0,0 ähnelt.
        /// </summary>
        internal static string NeonButton_ForeColor {
            get {
                return ResourceManager.GetString("NeonButton.ForeColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 255,255,255,255 ähnelt.
        /// </summary>
        internal static string NeonCheckBox_BackColor {
            get {
                return ResourceManager.GetString("NeonCheckBox.BackColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 255,0,0,0 ähnelt.
        /// </summary>
        internal static string NeonCheckBox_ForeColor {
            get {
                return ResourceManager.GetString("NeonCheckBox.ForeColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 255,255,255,255 ähnelt.
        /// </summary>
        internal static string NeonForm_BackColor {
            get {
                return ResourceManager.GetString("NeonForm.BackColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 255,0,0,0 ähnelt.
        /// </summary>
        internal static string NeonLabel_ForeColor {
            get {
                return ResourceManager.GetString("NeonLabel.ForeColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 100,0,0,0 ähnelt.
        /// </summary>
        internal static string NeonPopupBoxPanel_BackColor {
            get {
                return ResourceManager.GetString("NeonPopupBoxPanel.BackColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Transparent ähnelt.
        /// </summary>
        internal static string NeonTab_BackColor {
            get {
                return ResourceManager.GetString("NeonTab.BackColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 255,127,127,127 ähnelt.
        /// </summary>
        internal static string NeonTab_CloseButton_BackColor {
            get {
                return ResourceManager.GetString("NeonTab.CloseButton.BackColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 255,245,245,245 ähnelt.
        /// </summary>
        internal static string NeonTabList_BackColor {
            get {
                return ResourceManager.GetString("NeonTabList.BackColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 255,255,255,255 ähnelt.
        /// </summary>
        internal static string NeonTabList_ScrollPanel_BackColor {
            get {
                return ResourceManager.GetString("NeonTabList.ScrollPanel.BackColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 255,245,245,245 ähnelt.
        /// </summary>
        internal static string NeonTextBox_BackColor {
            get {
                return ResourceManager.GetString("NeonTextBox.BackColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 255,0,0,0 ähnelt.
        /// </summary>
        internal static string NeonTextBox_InsideTextBox_ForeColor {
            get {
                return ResourceManager.GetString("NeonTextBox.InsideTextBox.ForeColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 255,245,245,245 ähnelt.
        /// </summary>
        internal static string NeonWindowPanel_BackColor {
            get {
                return ResourceManager.GetString("NeonWindowPanel.BackColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 255,0,0,0 ähnelt.
        /// </summary>
        internal static string NeonWindowPanel_TitleLabel_ForeColor {
            get {
                return ResourceManager.GetString("NeonWindowPanel.TitleLabel.ForeColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Transparent ähnelt.
        /// </summary>
        internal static string NeonWindowStateButton_BackColor {
            get {
                return ResourceManager.GetString("NeonWindowStateButton.BackColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 255,0,0,0 ähnelt.
        /// </summary>
        internal static string NeonWindowStateButton_ForeColor {
            get {
                return ResourceManager.GetString("NeonWindowStateButton.ForeColor", resourceCulture);
            }
        }
    }
}
